grid.arrange(
do.call(arrangeGrob, lapply(plots, function(x)
x + theme(legend.position="none"))),
legend,
ncol = 1,
heights = unit.c(unit(1, "npc") - 1.5 * lheight, lheight), # the "1.5" adds room for title
top = textGrob("Summary - percent difference", gp = gpar(fontsize = 12)))
}
emissions_plot <- grid_arrange_shared_legend(emibc_plot,
emiso2_plot,
mmrbc_plot,
mmrso4_plot,
so2_plot)
forcing_plot <- grid_arrange_shared_legend(rlut_plot,
rsut_plot,
net_rad_plot,
rsdt_plot,
rlutcs_plot,
rsutcs_plot,
net_rad_cs_plot,
od550aer_plot,
clt_plot,
cltc_plot)
deposition_plot <- grid_arrange_shared_legend(drybc_plot,
wetbc_plot,
tot_bc_plot,
dryso2_plot,
wetso2_plot,
dryso4_plot,
wetso4_plot,
tot_s_plot)
# Print plots
setwd(paste0('../../../../output/', region, '/summary'))
pdf(paste0(region, '_summary_plots_per_diff.pdf'), height = 11, width = 8.5, paper = "letter")
grid.draw(emissions_plot)
grid.newpage()
grid.draw(forcing_plot)
grid.newpage()
grid.draw(deposition_plot)
dev.off()
source('C:/Users/ahsa361/OneDrive - PNNL/Desktop/Emissions-MIP-Phase1a/code/summary_plots_per_diff.R', echo=TRUE)
# ------------------------------------------------------------------------------
# Program Name: timeseries_diff.R
# Authors: Hamza Ahsan
# Date Last Modified: September 29, 2021
# Program Purpose: Produces time series line plots of the difference between
# the perturbations and the reference case
# Input Files: ~Emissions-MIP/input/
# Output Files: ~Emissions-MIP/output/
# TODO:
# ------------------------------------------------------------------------------
# Load required libraries
library(dplyr)
library(tidyr)
library(purrr)
library(ggplot2)
library(gridExtra)
library(grid)
# Specify location of Emissions-MIP directory
emi_dir <- paste0('C:/Users/ahsa361/OneDrive - PNNL/Desktop/Emissions-MIP-Phase1a')
# Specify region (i.e., global, land, sea, arctic, NH-land, NH-sea, SH-land,
# SH-sea, NH-atlantic, NH-pacific)
region <- "global"
# Define default ggplot colors and associate with models (in case a plot is
# missing a model, the color scheme will remain consistent)
gg_color_hue <- function(n) {
hues = seq(15, 375, length = n + 1)
hcl(h = hues, l = 65, c = 100)[1:n]
}
cols = gg_color_hue(10)
model_colors <- c(CESM1 = cols[1], E3SM = cols[2], GISS = cols[3], CESM2 = cols[4],
MIROC = cols[5], NorESM2 = cols[6], GFDL = cols[7], OsloCTM3 = cols[8],
UKESM = cols[9], GEOS = cols[10])
# ------------------------------------------------------------------------------
# Iterate over the different perturbation experiments
perts <- c('bc-no-season', 'high-so4', 'no-so4', 'so2-at-height', 'so2-no-season')
for(pert in perts){
# Specify location of difference data
setwd(paste0(emi_dir, '/input/', region, '/', pert, '/diff'))
# Read in csv files and bind into single data frame
target_filename <- list.files(getwd(), "*.csv")
experiment <- rbind(map(target_filename, read.csv))
experiment <- lapply(experiment, function(x) {x["unit"] <- NULL; x})
experiment <- bind_rows(experiment)
# Extract model from file names (fifth segment) and bind to experiment data frame
models <- sapply(strsplit(target_filename, "[-.]+"),function(x) x[5])
rep_models <- rep(models, each = 4) # four years
experiment$model <- rep_models
# Correct model names for CESM1
experiment$model[which(experiment$model == "CESM")] <- "CESM1"
# ------------------------------------------------------------------------------
# Program Name: timeseries_diff.R
# Authors: Hamza Ahsan
# Date Last Modified: September 29, 2021
# Program Purpose: Produces time series line plots of the difference between
# the perturbations and the reference case
# Input Files: ~Emissions-MIP/input/
# Output Files: ~Emissions-MIP/output/
# TODO:
# ------------------------------------------------------------------------------
# Load required libraries
library(dplyr)
library(tidyr)
library(purrr)
library(ggplot2)
library(gridExtra)
library(grid)
# Specify location of Emissions-MIP directory
emi_dir <- paste0('C:/Users/ahsa361/OneDrive - PNNL/Desktop/Emissions-MIP-Phase1a')
# Specify region (i.e., global, land, sea, arctic, NH-land, NH-sea, SH-land,
# SH-sea, NH-atlantic, NH-pacific)
region <- "global"
# Define default ggplot colors and associate with models (in case a plot is
# missing a model, the color scheme will remain consistent)
gg_color_hue <- function(n) {
hues = seq(15, 375, length = n + 1)
hcl(h = hues, l = 65, c = 100)[1:n]
}
cols = gg_color_hue(10)
model_colors <- c(CESM1 = cols[1], E3SM = cols[2], GISS = cols[3], CESM2 = cols[4],
MIROC = cols[5], NorESM2 = cols[6], GFDL = cols[7], OsloCTM3 = cols[8],
UKESM = cols[9], GEOS = cols[10])
pert <- 'bc-no-season'
# Specify location of difference data
setwd(paste0(emi_dir, '/input/', region, '/', pert, '/diff'))
# Read in csv files and bind into single data frame
target_filename <- list.files(getwd(), "*.csv")
experiment <- rbind(map(target_filename, read.csv))
experiment <- lapply(experiment, function(x) {x["unit"] <- NULL; x})
experiment <- bind_rows(experiment)
# Extract model from file names (fifth segment) and bind to experiment data frame
models <- sapply(strsplit(target_filename, "[-.]+"),function(x) x[5])
rep_models <- rep(models, each = 4) # four years
experiment$model <- rep_models
# Correct model names for CESM1
experiment$model[which(experiment$model == "CESM")] <- "CESM1"
# ------------------------------------------------------------------------------
# Program Name: timeseries_diff.R
# Authors: Hamza Ahsan
# Date Last Modified: September 29, 2021
# Program Purpose: Produces time series line plots of the difference between
# the perturbations and the reference case
# Input Files: ~Emissions-MIP/input/
# Output Files: ~Emissions-MIP/output/
# TODO:
# ------------------------------------------------------------------------------
# Load required libraries
library(dplyr)
library(tidyr)
library(purrr)
library(ggplot2)
library(gridExtra)
library(grid)
# Specify location of Emissions-MIP directory
emi_dir <- paste0('C:/Users/ahsa361/OneDrive - PNNL/Desktop/Emissions-MIP-Phase1a')
# Specify region (i.e., global, land, sea, arctic, NH-land, NH-sea, SH-land,
# SH-sea, NH-atlantic, NH-pacific)
region <- "global"
# Define default ggplot colors and associate with models (in case a plot is
# missing a model, the color scheme will remain consistent)
gg_color_hue <- function(n) {
hues = seq(15, 375, length = n + 1)
hcl(h = hues, l = 65, c = 100)[1:n]
}
cols = gg_color_hue(10)
model_colors <- c(CESM1 = cols[1], E3SM = cols[2], GISS = cols[3], CESM2 = cols[4],
MIROC = cols[5], NorESM2 = cols[6], GFDL = cols[7], OsloCTM3 = cols[8],
UKESM = cols[9], GEOS = cols[10])
pert <- 'bc-no-season'
# Specify location of difference data
setwd(paste0(emi_dir, '/input/', region, '/', pert, '/diff'))
# Read in csv files and bind into single data frame
target_filename <- list.files(getwd(), "*.csv")
experiment <- rbind(map(target_filename, read.csv))
experiment <- lapply(experiment, function(x) {x["unit"] <- NULL; x})
experiment <- bind_rows(experiment)
# Extract model from file names (fifth segment) and bind to experiment data frame
models <- sapply(strsplit(target_filename, "[-.]+"),function(x) x[5])
rep_models <- rep(models, each = 4) # four years
experiment$model <- rep_models
# Correct model names for CESM1
experiment$model[which(experiment$model == "CESM")] <- "CESM1"
View(experiment)
# Change any negative value to positive (i.e., CESM2 wetbc, wetso2, wetso4)
# Invert sign of CESM2 wet deposition variables
experiment$value[which(experiment$model == "CESM2" & experiment$variable == "wetbc")] <-
-1 * experiment$value[which(experiment$model == "CESM2" & experiment$variable == "wetbc")]
experiment$value[which(experiment$model == "CESM2" & experiment$variable == "wetso2")] <-
-1 * experiment$value[which(experiment$model == "CESM2" & experiment$variable == "wetso2")]
experiment$value[which(experiment$model == "CESM2" & experiment$variable == "wetso4")] <-
-1 * experiment$value[which(experiment$model == "CESM2" & experiment$variable == "wetso4")]
source('C:/Users/ahsa361/OneDrive - PNNL/Desktop/Emissions-MIP-Phase1a/code/timeseries_diff.R', echo=TRUE)
source('C:/Users/ahsa361/OneDrive - PNNL/Desktop/Emissions-MIP-Phase1a/code/timeseries_diff.R', echo=TRUE)
source('C:/Users/ahsa361/OneDrive - PNNL/Desktop/Emissions-MIP-Phase1a/code/timeseries_diff.R', echo=TRUE)
source('C:/Users/ahsa361/OneDrive - PNNL/Desktop/Emissions-MIP-Phase1a/code/timeseries_diff.R', echo=TRUE)
source('C:/Users/ahsa361/OneDrive - PNNL/Desktop/Emissions-MIP-Phase1a/code/timeseries_diff.R', echo=TRUE)
source('C:/Users/ahsa361/OneDrive - PNNL/Desktop/Emissions-MIP-Phase1a/code/timeseries_diff.R', echo=TRUE)
source('C:/Users/ahsa361/OneDrive - PNNL/Desktop/Emissions-MIP-Phase1a/code/timeseries_diff.R', echo=TRUE)
source('C:/Users/ahsa361/OneDrive - PNNL/Desktop/Emissions-MIP-Phase1a/code/timeseries_diff.R', echo=TRUE)
source('C:/Users/ahsa361/OneDrive - PNNL/Desktop/Emissions-MIP-Phase1a/code/timeseries_diff.R', echo=TRUE)
source('C:/Users/ahsa361/OneDrive - PNNL/Desktop/Emissions-MIP-Phase1a/code/timeseries_diff.R', echo=TRUE)
source('C:/Users/ahsa361/OneDrive - PNNL/Desktop/Emissions-MIP-Phase1a/code/timeseries_per_diff.R', echo=TRUE)
source('C:/Users/ahsa361/OneDrive - PNNL/Desktop/Emissions-MIP-Phase1a/code/timeseries_per_diff.R', echo=TRUE)
source('C:/Users/ahsa361/OneDrive - PNNL/Desktop/Emissions-MIP-Phase1a/code/timeseries_per_diff.R', echo=TRUE)
source('C:/Users/ahsa361/OneDrive - PNNL/Desktop/Emissions-MIP-Phase1a/code/timeseries_per_diff.R', echo=TRUE)
source('C:/Users/ahsa361/OneDrive - PNNL/Desktop/Emissions-MIP-Phase1a/code/timeseries_per_diff.R', echo=TRUE)
source('C:/Users/ahsa361/OneDrive - PNNL/Desktop/Emissions-MIP-Phase1a/code/timeseries_per_diff.R', echo=TRUE)
source('C:/Users/ahsa361/OneDrive - PNNL/Desktop/Emissions-MIP-Phase1a/code/timeseries_per_diff.R', echo=TRUE)
source('C:/Users/ahsa361/OneDrive - PNNL/Desktop/Emissions-MIP-Phase1a/code/timeseries_per_diff.R', echo=TRUE)
source('C:/Users/ahsa361/OneDrive - PNNL/Desktop/Emissions-MIP-Phase1a/code/timeseries_per_diff.R', echo=TRUE)
source('C:/Users/ahsa361/OneDrive - PNNL/Desktop/Emissions-MIP-Phase1a/code/timeseries_per_diff.R', echo=TRUE)
# ------------------------------------------------------------------------------
# Program Name: summary_plots_per_diff.R
# Authors: Hamza Ahsan
# Date Last Modified: September 29, 2021
# Program Purpose: Produces summary plots of the percent difference between the
# perturbations and the reference case averaged over all years
# Input Files: ~Emissions-MIP/input/
# Output Files: ~Emissions-MIP/output/
# TODO:
# ------------------------------------------------------------------------------
# Load required libraries
library(dplyr)
library(tidyr)
library(purrr)
library(ggplot2)
library(gridExtra)
library(grid)
# Specify location of Emissions-MIP directory
emi_dir <- paste0('C:/Users/ahsa361/OneDrive - PNNL/Desktop/Emissions-MIP-Phase1a')
# Specify region (i.e., global, land, sea, arctic, NH-land, NH-sea, SH-land,
# SH-sea, NH-atlantic, NH-pacific)
region <- "global"
# Define default ggplot colors and associate with models (in case a plot is
# missing a model, the color scheme will remain consistent)
gg_color_hue <- function(n) {
hues = seq(15, 375, length = n + 1)
hcl(h = hues, l = 65, c = 100)[1:n]
}
cols = gg_color_hue(10)
model_colors <- c(CESM1 = cols[1], E3SM = cols[2], GISS = cols[3], CESM2 = cols[4],
MIROC = cols[5], NorESM2 = cols[6], GFDL = cols[7], OsloCTM3 = cols[8],
UKESM = cols[9], GEOS = cols[10])
# ------------------------------------------------------------------------------
# Setup directory for bc-no-seas percent difference data
setwd(paste0(emi_dir, '/input/', region, '/bc-no-season/per-diff'))
# Read in csv files and bind into single data frame
target_filename <- list.files(getwd(), "*.csv")
bc_no_seas <- rbind(map(target_filename, read.csv))
bc_no_seas <- lapply(bc_no_seas, function(x) {x["unit"] <- NULL; x})
bc_no_seas <- bind_rows(bc_no_seas)
# Extract model from file names (fifth segment) and bind to experiment data frame
models <- sapply(strsplit(target_filename, "[-.]+"),function(x) x[5])
rep_models <- rep(models, each = 4) # four years
bc_no_seas$model <- rep_models
# Invert sign of CESM2 wet deposition variables
bc_no_seas$value[which(bc_no_seas$model == "CESM2" & bc_no_seas$variable == "wetbc")] <-
-1 * bc_no_seas$value[which(bc_no_seas$model == "CESM2" & bc_no_seas$variable == "wetbc")]
bc_no_seas$value[which(bc_no_seas$model == "CESM2" & bc_no_seas$variable == "wetso2")] <-
-1 * bc_no_seas$value[which(bc_no_seas$model == "CESM2" & bc_no_seas$variable == "wetso2")]
bc_no_seas$value[which(bc_no_seas$model == "CESM2" & bc_no_seas$variable == "wetso4")] <-
-1 * bc_no_seas$value[which(bc_no_seas$model == "CESM2" & bc_no_seas$variable == "wetso4")]
# Take the average over all years for each variable
bc_no_seas_summary <- bc_no_seas %>% dplyr::group_by(variable, model) %>%
dplyr::summarise(bc_no_seas = mean(value), bc_no_seas_sd = sd(value))
#---------------------------------------------------
# Setup directory for high-SO4 percent difference data
setwd(paste0(emi_dir, '/input/', region, '/high-SO4/per-diff'))
# Read in csv files and bind into single data frame
target_filename <- list.files(getwd(), "*.csv")
high_so4 <- rbind(map(target_filename, read.csv))
high_so4 <- lapply(high_so4, function(x) {x["unit"] <- NULL; x})
high_so4 <- bind_rows(high_so4)
# Extract model from file names (fifth segment) and bind to experiment data frame
models <- sapply(strsplit(target_filename, "[-.]+"),function(x) x[5])
rep_models <- rep(models, each = 4) # four years
high_so4$model <- rep_models
# Invert sign of CESM2 wet deposition variables
high_so4$value[which(high_so4$model == "CESM2" & high_so4$variable == "wetbc")] <-
-1 * high_so4$value[which(high_so4$model == "CESM2" & high_so4$variable == "wetbc")]
high_so4$value[which(high_so4$model == "CESM2" & high_so4$variable == "wetso2")] <-
-1 * high_so4$value[which(high_so4$model == "CESM2" & high_so4$variable == "wetso2")]
high_so4$value[which(high_so4$model == "CESM2" & high_so4$variable == "wetso4")] <-
-1 * high_so4$value[which(high_so4$model == "CESM2" & high_so4$variable == "wetso4")]
# Take the average over all years for each variable
high_so4_summary <- high_so4 %>% dplyr::group_by(variable, model) %>%
dplyr::summarise(high_so4 = mean(value), high_so4_sd = sd(value))
#---------------------------------------------------
# Setup directory for no-SO4 percent difference data
setwd(paste0(emi_dir, '/input/', region, '/no-SO4/per-diff'))
# Read in csv files and bind into single data frame
target_filename <- list.files(getwd(), "*.csv")
no_so4 <- rbind(map(target_filename, read.csv))
no_so4 <- lapply(no_so4, function(x) {x["unit"] <- NULL; x})
no_so4 <- bind_rows(no_so4)
# Extract model from file names (fifth segment) and bind to experiment data frame
models <- sapply(strsplit(target_filename, "[-.]+"),function(x) x[5])
rep_models <- rep(models, each = 4) # four years
no_so4$model <- rep_models
# Invert sign of CESM2 wet deposition variables
no_so4$value[which(no_so4$model == "CESM2" & no_so4$variable == "wetbc")] <-
-1 * no_so4$value[which(no_so4$model == "CESM2" & no_so4$variable == "wetbc")]
no_so4$value[which(no_so4$model == "CESM2" & no_so4$variable == "wetso2")] <-
-1 * no_so4$value[which(no_so4$model == "CESM2" & no_so4$variable == "wetso2")]
no_so4$value[which(no_so4$model == "CESM2" & no_so4$variable == "wetso4")] <-
-1 * no_so4$value[which(no_so4$model == "CESM2" & no_so4$variable == "wetso4")]
# Take the average over all years for each variable
no_so4_summary <- no_so4 %>% dplyr::group_by(variable, model) %>%
dplyr::summarise(no_so4 = mean(value), no_so4_sd = sd(value))
#---------------------------------------------------
# Setup directory for SO2-at-height percent difference data
setwd(paste0(emi_dir, '/input/', region, '/so2-at-height/per-diff'))
# Read in csv files and bind into single data frame
target_filename <- list.files(getwd(), "*.csv")
so2_at_hgt <- rbind(map(target_filename, read.csv))
so2_at_hgt <- lapply(so2_at_hgt, function(x) {x["unit"] <- NULL; x})
so2_at_hgt <- bind_rows(so2_at_hgt)
# Extract model from file names (fifth segment) and bind to experiment data frame
models <- sapply(strsplit(target_filename, "[-.]+"),function(x) x[5])
rep_models <- rep(models, each = 4) # four years
so2_at_hgt$model <- rep_models
# Take the average over all years for each variable
so2_at_hgt_summary <- so2_at_hgt %>% dplyr::group_by(variable, model) %>%
dplyr::summarise(so2_at_hgt = mean(value), so2_at_hgt_sd = sd(value))
#---------------------------------------------------
# Setup directory for SO2-no-season percent difference data
setwd(paste0(emi_dir, '/input/', region, '/so2-no-season/per-diff'))
# Read in csv files and bind into single data frame
target_filename <- list.files(getwd(), "*.csv")
so2_no_seas <- rbind(map(target_filename, read.csv))
so2_no_seas <- lapply(so2_no_seas, function(x) {x["unit"] <- NULL; x})
so2_no_seas <- bind_rows(so2_no_seas)
# Extract model from file names (fifth segment) and bind to experiment data frame
models <- sapply(strsplit(target_filename, "[-.]+"),function(x) x[5])
rep_models <- rep(models, each = 4) # four years
so2_no_seas$model <- rep_models
# Invert sign of CESM2 wet deposition variables
so2_no_seas$value[which(so2_no_seas$model == "CESM2" & so2_no_seas$variable == "wetbc")] <-
-1 * so2_no_seas$value[which(so2_no_seas$model == "CESM2" & so2_no_seas$variable == "wetbc")]
so2_no_seas$value[which(so2_no_seas$model == "CESM2" & so2_no_seas$variable == "wetso2")] <-
-1 * so2_no_seas$value[which(so2_no_seas$model == "CESM2" & so2_no_seas$variable == "wetso2")]
so2_no_seas$value[which(so2_no_seas$model == "CESM2" & so2_no_seas$variable == "wetso4")] <-
-1 * so2_no_seas$value[which(so2_no_seas$model == "CESM2" & so2_no_seas$variable == "wetso4")]
# Take the average over all years for each variable
so2_no_seas_summary <- so2_no_seas %>% dplyr::group_by(variable, model) %>%
dplyr::summarise(so2_no_seas = mean(value), so2_no_seas_sd = sd(value))
#---------------------------------------------------
# Bind data together
summary_data <- list(bc_no_seas_summary, high_so4_summary, no_so4_summary, so2_at_hgt_summary, so2_no_seas_summary) %>% reduce(left_join, by = c("variable", "model"))
# Correct model names for CESM and CESM2
summary_data$model[which(summary_data$model == "CESM")] <- "CESM1"
# Change to long format
summary_long_exp <- summary_data %>%
gather(experiment, value, -c(model, variable, bc_no_seas_sd, high_so4_sd, no_so4_sd, so2_at_hgt_sd, so2_no_seas_sd)) %>%
select(variable, model, experiment, value) %>%
drop_na()
summary_long_sd <- summary_data %>%
gather(experiment, sd, -c(model, variable, bc_no_seas, high_so4, no_so4, so2_at_hgt, so2_no_seas)) %>%
select(variable, model, experiment, sd) %>%
drop_na()
summary_long_sd$experiment <- gsub("_sd", "", summary_long_sd$experiment)
summary_long <- dplyr::left_join(summary_long_exp, summary_long_sd)
# Generate plots
title_font <- 9.5
axis_font <- 9
axis_title_font <- 9
emibc <- dplyr::filter(summary_long, variable == "emibc")
emibc_plot <- ggplot(emibc, aes(x = experiment, y = value, color = model)) +
theme_bw() +
labs(title = paste0('surface flux of BC - ', region), y="Percent") +
theme(plot.title = element_text(hjust = 0.5, size = title_font),
axis.text = element_text(size = axis_font),
axis.title = element_text(size = axis_title_font),
axis.text.x = element_text(angle = 45, hjust = 1),
axis.title.x = element_blank()) +
scale_y_continuous(labels = function(x) paste0(x, "%"), limits = c(-max(abs(emibc$value)), max(abs(emibc$value)))) +
scale_colour_manual(values = model_colors) +
geom_point( position=position_dodge(width = 0.4), size = 1.5) +
geom_pointrange(aes(ymin=value-sd, ymax=value+sd))
emiso2 <- dplyr::filter(summary_long, variable == "emiso2")
emiso2_plot <- ggplot(emiso2, aes(x = experiment, y = value, color = model)) +
theme_bw() +
labs(title = paste0('surface flux of SO2 - ', region), y="Percent") +
theme(plot.title = element_text(hjust = 0.5, size = title_font),
axis.text = element_text(size = axis_font),
axis.title = element_text(size = axis_title_font),
axis.text.x = element_text(angle = 45, hjust = 1),
axis.title.x = element_blank()) +
scale_y_continuous(labels = function(x) paste0(x, "%"), limits = c(-max(abs(emiso2$value)), max(abs(emiso2$value)))) +
scale_colour_manual(values = model_colors) +
geom_point( position=position_dodge(width = 0.4), size = 1.5) +
geom_pointrange(aes(ymin=value-sd, ymax=value+sd))
mmrbc <- dplyr::filter(summary_long, variable == "mmrbc")
mmrbc_plot <- ggplot(mmrbc, aes(x = experiment, y = value, color = model)) +
theme_bw() +
labs(title = paste0('surface concentration of BC - ', region), y="Percent") +
theme(plot.title = element_text(hjust = 0.5, size = title_font),
axis.text = element_text(size = axis_font),
axis.title = element_text(size = axis_title_font),
axis.text.x = element_text(angle = 45, hjust = 1),
axis.title.x = element_blank()) +
scale_y_continuous(labels = function(x) paste0(x, "%"), limits = c(-max(abs(mmrbc$value)), max(abs(mmrbc$value)))) +
scale_colour_manual(values = model_colors) +
geom_point( position=position_dodge(width = 0.4), size = 1.5) +
geom_pointrange(aes(ymin=value-sd, ymax=value+sd))
mmrbc_plot
mmrbc_plot <- ggplot(mmrbc, aes(x = experiment, y = value, color = model)) +
theme_bw() +
labs(title = paste0('surface concentration of BC - ', region), y="Percent") +
theme(plot.title = element_text(hjust = 0.5, size = title_font),
axis.text = element_text(size = axis_font),
axis.title = element_text(size = axis_title_font),
axis.text.x = element_text(angle = 45, hjust = 1),
axis.title.x = element_blank()) +
scale_y_continuous(labels = function(x) paste0(x, "%"), limits = c(-max(abs(mmrbc$value)), max(abs(mmrbc$value)))) +
scale_colour_manual(values = model_colors) +
geom_point( position=position_dodge(width = 0.4), size = 1.5) +
geom_errorbar(aes(ymin=value-sd, ymax=value+sd))
mmrbc_plot
mmrbc_plot <- ggplot(mmrbc, aes(x = experiment, y = value, color = model)) +
theme_bw() +
labs(title = paste0('surface concentration of BC - ', region), y="Percent") +
theme(plot.title = element_text(hjust = 0.5, size = title_font),
axis.text = element_text(size = axis_font),
axis.title = element_text(size = axis_title_font),
axis.text.x = element_text(angle = 45, hjust = 1),
axis.title.x = element_blank()) +
scale_y_continuous(labels = function(x) paste0(x, "%"), limits = c(-max(abs(mmrbc$value)), max(abs(mmrbc$value)))) +
scale_colour_manual(values = model_colors) +
geom_point( position=position_dodge(width = 0.4), size = 1.5) +
geom_errorbar(aes(ymin=value-sd, ymax=value+sd), width=.2, position=position_dodge(0.4))
mmrbc_plot
mmrbc_plot <- ggplot(mmrbc, aes(x = experiment, y = value, color = model)) +
theme_bw() +
labs(title = paste0('surface concentration of BC - ', region), y="Percent") +
theme(plot.title = element_text(hjust = 0.5, size = title_font),
axis.text = element_text(size = axis_font),
axis.title = element_text(size = axis_title_font),
axis.text.x = element_text(angle = 45, hjust = 1),
axis.title.x = element_blank()) +
scale_y_continuous(labels = function(x) paste0(x, "%"), limits = c(-max(abs(mmrbc$value)), max(abs(mmrbc$value)))) +
scale_colour_manual(values = model_colors) +
geom_point( position=position_dodge(width = 0.4), size = 1.5)
mmrbc_plot
mmrbc_plot <- ggplot(mmrbc, aes(x = experiment, y = value, color = model)) +
theme_bw() +
labs(title = paste0('surface concentration of BC - ', region), y="Percent") +
theme(plot.title = element_text(hjust = 0.5, size = title_font),
axis.text = element_text(size = axis_font),
axis.title = element_text(size = axis_title_font),
axis.text.x = element_text(angle = 45, hjust = 1),
axis.title.x = element_blank()) +
scale_y_continuous(labels = function(x) paste0(x, "%"), limits = c(-max(abs(mmrbc$value)), max(abs(mmrbc$value)))) +
scale_colour_manual(values = model_colors) +
geom_point( position=position_dodge(width = 0.4), size = 1.5) +
geom_errorbar(aes(ymin=value-sd, ymax=value+sd), width=.2, position=position_dodge(0.4))
mmrbc_plot
mmrbc_plot <- ggplot(mmrbc, aes(x = experiment, y = value, color = model)) +
theme_bw() +
labs(title = paste0('surface concentration of BC - ', region), y="Percent") +
theme(plot.title = element_text(hjust = 0.5, size = title_font),
axis.text = element_text(size = axis_font),
axis.title = element_text(size = axis_title_font),
axis.text.x = element_text(angle = 45, hjust = 1),
axis.title.x = element_blank()) +
scale_y_continuous(labels = function(x) paste0(x, "%"), limits = c(-max(abs(mmrbc$value)), max(abs(mmrbc$value)))) +
scale_colour_manual(values = model_colors) +
geom_point( position=position_dodge(width = 0.4), size = 1.5) +
geom_errorbar(aes(ymin=value-sd, ymax=value+sd), width= 0.4, position=position_dodge(0.4))
mmrbc_plot
mmrbc_plot <- ggplot(mmrbc, aes(x = experiment, y = value, color = model)) +
theme_bw() +
labs(title = paste0('surface concentration of BC - ', region), y="Percent") +
theme(plot.title = element_text(hjust = 0.5, size = title_font),
axis.text = element_text(size = axis_font),
axis.title = element_text(size = axis_title_font),
axis.text.x = element_text(angle = 45, hjust = 1),
axis.title.x = element_blank()) +
scale_y_continuous(labels = function(x) paste0(x, "%"), limits = c(-max(abs(mmrbc$value)), max(abs(mmrbc$value)))) +
scale_colour_manual(values = model_colors) +
geom_point( position=position_dodge(width = 0.4), size = 1.5) +
geom_errorbar(aes(ymin=value-sd, ymax=value+sd), width= 0.2, position=position_dodge(0.4))
mmrbc_plot
emibc <- dplyr::filter(summary_long, variable == "emibc")
emibc_plot <- ggplot(emibc, aes(x = experiment, y = value, color = model)) +
theme_bw() +
labs(title = paste0('surface flux of BC - ', region), y="Percent") +
theme(plot.title = element_text(hjust = 0.5, size = title_font),
axis.text = element_text(size = axis_font),
axis.title = element_text(size = axis_title_font),
axis.text.x = element_text(angle = 45, hjust = 1),
axis.title.x = element_blank()) +
scale_y_continuous(labels = function(x) paste0(x, "%"), limits = c(-max(abs(emibc$value)), max(abs(emibc$value)))) +
scale_colour_manual(values = model_colors) +
geom_point( position=position_dodge(width = 0.4), size = 1.5) +
geom_errorbar(aes(ymin=value-sd, ymax=value+sd), width= 0.2, position=position_dodge(0.4))
emiso2 <- dplyr::filter(summary_long, variable == "emiso2")
emiso2_plot <- ggplot(emiso2, aes(x = experiment, y = value, color = model)) +
theme_bw() +
labs(title = paste0('surface flux of SO2 - ', region), y="Percent") +
theme(plot.title = element_text(hjust = 0.5, size = title_font),
axis.text = element_text(size = axis_font),
axis.title = element_text(size = axis_title_font),
axis.text.x = element_text(angle = 45, hjust = 1),
axis.title.x = element_blank()) +
scale_y_continuous(labels = function(x) paste0(x, "%"), limits = c(-max(abs(emiso2$value)), max(abs(emiso2$value)))) +
scale_colour_manual(values = model_colors) +
geom_point( position=position_dodge(width = 0.4), size = 1.5) +
geom_errorbar(aes(ymin=value-sd, ymax=value+sd), width= 0.2, position=position_dodge(0.4))
emiso2_plot
emibc_plot
mmrbc_plot
