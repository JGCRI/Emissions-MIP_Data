writeLines('PATH="${RTOOLS40_HOME}\\usr\\bin;${PATH}"', con = "~/.Renviron")
Sys.which("make")
packageurl <- "https://cran.r-project.org/src/contrib/Archive/renv/renv_0.9.2.tar.gz"
install.packages( packageurl, repos = NULL, type = "source" )
renv::init( bare = TRUE)
str <- "w m2"
str
install.packages("Rcpp")
library()
install_github('JGCRI/rgcam', build_vignettes=TRUE)
install_github('JGCRI/rgcam', build_vignettes=TRUE)
library(devtools)
install.packages("purrr")
library(devtools)
install_github('JGCRI/rgcam', build_vignettes=TRUE)
library()
for (i in 11:20) {
i
}
em <- "BC"
grid_resolution <- 0.5
chunk_start_years <- 1970
chunk_end_years <- 1979
chunk_count_index <- 1
year_1st <- chunk_start_years[ chunk_count_index ]
year_last <- chunk_end_years[ chunk_count_index ]
chunk_yr_range <- year_1st:year_last
n_chunk_years <- ( chunk_end_years - chunk_start_years + 1 )[ chunk_count_index ]
n_months <- 12 * n_chunk_years
AIR_array <- NULL
time_array <- numeric( n_months )
time_bnds_array <- array( dim = c( 2, n_months ) )
current_month <- 1
grid_dims <- nc[[ c( 'var', 'AIR', 'size' ) ]]
AIR_array <- array( dim = c( grid_dims[ 1:3 ], n_months ) )
nc <- nc_open( file.path( input_dir, fin_grid ) )
system("uuid",intern=T)
system("uuidgen", intern=T)
system("uuidgen", intern=T)
system("uuidgen", intern=T)
system("uuidgen", intern=T)
paste0( as.character("hdl:21.14100/", system("uuidgen", intern=T)))
system("uuidgen", intern=T)
paste0( "hdl:21.14100/", system("uuidgen", intern=T))
sometext <- paste0( "hdl:21.14100/", system("uuidgen", intern=T))
str(sometext)
1.199497e-07 - 3.061977e-08
message(test)
message('test')
print('test')
print("test")
start_year <- 1950
as.numeric(paste0(start_year, '01'))
temp_nc <- nc_open('C:/Users/ahsa361/Documents/CEDS_Data/gridding-preprocessing/tasks/A.gridcell-area-nc-generation/output/CEDS_gridcell_area_05.nc')
7.0E-05/108861152.0
6.6E-05/326547648.0
3.7E-03/6309608960.0
7.009407E-05/108861152.0
6.570430E-05/326547648.0
5.239167E-05/544126656.0
7.944026E-04/544126656.0
2.382207E-03/1195503744.0
load("C:/Users/ahsa361/OneDrive - PNNL/Documents/CEDS_Gridding_Proxy_Data_v2019_06_18/proxy-backup/population_2000.Rd")
View(population_2000)
proxy_down <- array( 0, dim = c( 180/0.1, 360/0.1, 12 ) )
# ------------------------------------------------------------------------------
# Program Name: G4.1.downscale_bulk_emissions.R
# Authors: Hamza Ahsan
# Date Last Updated: May 27, 2021
# Program Purpose:
# Input Files:
# Output Files:
# Notes:
# TODO:
# ------------------------------------------------------------------------------
# ------------------------------------------------------------------------------
# 0. Read in global settings and headers
# Define PARAM_DIR as the location of the CEDS "parameters" directory, relative
# to the "input" directory.
PARAM_DIR <- if("input" %in% dir()) "code/parameters/" else "../code/parameters/"
# Read in universal header files, support scripts, and start logging
headers <- c( 'data_functions.R', 'gridding_functions.R', 'nc_generation_functions.R',
'../diagnostic/diag_utility_functions.R')
log_msg <- "Downscaling gridded anthropogenic emissions (excluding AIR) "
source( paste0( PARAM_DIR, "header.R" ) )
initialize( "G4.1.downscale_bulk_emissions.R", log_msg, headers )
# ------------------------------------------------------------------------------
# 0.5 Initialize gridding setups
# Define emissions species variable
args_from_makefile <- commandArgs( TRUE )
em <- args_from_makefile[ 1 ]
if ( is.na( em ) ) em <- "BC"
# Set up directories
output_dir <- filePath( "MED_OUT", "gridded-emissions/", extension = "" )
# ------------------------------------------------------------------------------
# 1 Read in files
sector_name_mapping <- readData( 'GRIDDING', domain_extension = 'gridding_mappings/', 'CEDS_gridding_sectors', meta = FALSE )
sector_name_mapping <- unique( sector_name_mapping[ , c( 'CEDS_fin_sector', 'CEDS_fin_sector_short' ) ] )
# ------------------------------------------------------------------------------
# 2. start
# degree of low and high resolution grids
low_res <- 0.5
high_res <- 0.1
year <- 2000
nc <- list.files( output_dir, pattern = paste(em, 'anthro', year, low_res, sep = "_") )
temp_nc <- nc_open( paste0( output_dir, '/', nc ) )
temp_var <- ncvar_get( temp_nc, 'IND' )
nc_close( temp_nc )
orig <- array( 0, dim = c( 360, 720, 12 ) )
days_in_month <- c( 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 )
DIM_rep <- rep( days_in_month, dim(orig)[3] / 12 )
load("C:/Users/ahsa361/OneDrive - PNNL/Desktop/OMI_Catalogue_Emissions_2005-2019.xls")
load("C:/Users/ahsa361/OneDrive - PNNL/Desktop/OMI_Catalogue_Emissions_2005-2019.xls")
load("C:/Users/ahsa361/OneDrive - PNNL/Desktop/OMI_Catalogue_Emissions_2005-2019.xls")
OMI_data <- read.csv(file = 'C:/Users/ahsa361/OneDrive - PNNL/Desktop/OMI_Catalogue_Emissions_2005-2019.csv')
View(OMI_data)
View(OMI_data)
OMI_data_long <- gather(OMI_data,"year","value",-c("sector":"AMF"))
library(dplyr)
library(tidyr)
OMI_data_long <- gather(OMI_data,"year","value",-c("sector":"AMF"))
OMI_data_long <- gather(OMI_data,"year","value",-c("NUMBER":"AMF"))
View(OMI_data_long)
View(OMI_data)
View(OMI_data_long)
View(OMI_data)
em_list <- c("OC")
install.packages("drake")
2017:2000
years <- 2017,2016,2014:2011,2009:2006,2004:200
years <- 2017,2016,2014:2011,2009:2006,2004:2000
20017,2016
years <- c(2017,2016,2014:2011,2009:2006,2004:2000)
years
.libPaths()
.libPaths()
setwd("C:/Users/ahsa361/Documents/Emissions-MIP_Data")
packageurl <- "https://cran.r-project.org/src/contrib/Archive/renv/renv_0.9.2.tar.gz"
install.packages( packageurl, repos = NULL, type = "source" )
.libPaths()
